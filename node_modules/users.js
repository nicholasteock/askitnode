// users.js

var globals = require('globals'),
	crypto 	= require('crypto'),
	async 	= require('async'),
	utility = require('utilities');

var profile = function( params, callback ) {
	var queryString = "",
		response 	= {};

	// Forms query string relative to parameter passed in
	if( 'accessToken' in params ) {
		queryString = 'SELECT id, email, firstName, lastName, accessToken, token_created FROM user WHERE accessToken="' + params.accessToken + '"';
	}
	else if( 'email' in params ) {
		queryString = 'SELECT id, email, firstName, lastName, accessToken, token_created FROM user WHERE email="' + params.email + '"';
	}
	else {
		response.result = "failure";
		response.error 	= "Invalid parameters"
		callback( response );
	}

	// Execute query
	globals.pool.getConnection( function(err, connection) {
		connection.query( queryString, function( err, rows ) {
			connection.release();
			var response = {};

			if( err ) {
				response.result = "failure";
				response.error = "Query returned error.";
				callback( response );
			}
			else {
				if( rows.length === 0 ) {
					response.result = "failure";
					response.error = "Invalid username/access token."
					callback( response );
				}
				else {
					response.result = "success";
					response.data = rows;
					callback( null, response );
				}
			}
		});
	});
};

var register = function( params, callback ) {
	// Hash password for storage
	var hash 			= utility.generateHash( params.email, params.password ).hash,
		insertString 	= "INSERT INTO user (id, firstName, lastName, email, password, token_created, account_created) VALUES (NULL, '" + params.firstName + "','" + params.lastName + "','" + params.email + "','" + hash + "', '0000-00-00 00:00:00', CURRENT_TIMESTAMP)",
		response 		= {};

	globals.pool.getConnection( function( err, connection ) {
		connection.query( insertString, function( err, rows ) {
			if( err ) {
				response.result = "failure";
				response.error 	= "Error inserting new user into db"
				callback( response );
			}
			else {
				response.result = "Success";
				callback( null, response );
			}
		})
	});
};





module.exports = {
	profile: profile,
	register: register
}
